apply plugin: 'com.android.library'
apply from: 'fat-aar.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    publishNonDefault true
    productFlavors {
        rootProject.ext.SDKProperties.each {
            productFlavors.create(it.product)
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    if (rootProject.ext.debug) {
        compile project(':base')
    } else {
        embedded project(':base')
        embedded project(':http')
    }
    alibabaCompile files('libs/gaode-map.jar')
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    testCompile 'junit:junit:4.12'
    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

rootProject.ext.SDKProperties.each {
    def product = it.product
    if (it.packageName == "" || it.packageName.length() <= 0)
        return
    // 如果渠道对应的sdk源码包不存在，则从base复制一份，根据base进行修改
    if (!file("src/$product").exists()) {
        copy {
            from "src/baidu"
            into "src/$product"
        }
    }
    // 如果渠道对应的demo源码包不存在，则从base复制一份，根据base进行修改
    if (!file("../app/src/$product").exists()) {
        copy {
            from "../app/src/baidu"
            into "../app/src/$product"
        }
    }
}